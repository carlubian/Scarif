@using Microsoft.AspNetCore.SignalR.Client
@using Scarif.Core.Model
@inject NavigationManager NavigationManager

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Scarif Log Server</a>
</div>

<div>
    <ul class="nav flex-column">
        @foreach (var app in Apps)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@($"app?id={app.Url}")">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> @app.Name &nbsp;
                    @if (AnySourcesForApp(app.Name))
                    {
                        <span class="badge badge-light">Online</span>
                    }
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    private HubConnection SignalR;

    public IEnumerable<ScarifApp> Apps = new List<ScarifApp>();
    public IDictionary<string, string> OnlineSources = new Dictionary<string, string>();


    protected override async Task OnInitializedAsync()
    {
        SignalR = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/scarif"))
            .Build();
        SignalR.On<IDictionary<string, string>>("UpdateOnlineSources", ReceiveSourcesUpdate);
        await SignalR.StartAsync();

        Apps = await SignalR.InvokeAsync<IEnumerable<ScarifApp>>("GetAllApps");
        OnlineSources = await SignalR.InvokeAsync<IDictionary<string, string>>("RequestOnlineSources");
    }

    private void ReceiveSourcesUpdate(IDictionary<string, string> update)
    {
        OnlineSources = update;
        this.StateHasChanged();
    }

    private bool AnySourcesForApp(string appName)
    {
        return OnlineSources.Any(s => s.Value.Equals(appName));
    }
}
