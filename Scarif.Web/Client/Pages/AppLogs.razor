@page "/appLogs"

@using Scarif.Core.Model
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

<h1>@AppName</h1>

<p class="lead">Here are the recorded logs for this app.</p>

<p>
    The log list below can be filtered using the corresponding
    controls on the right side of the page. This view will refresh
    automatically every few seconds.
</p>
<p>Please allow a few seconds to populate the view when first navigating.</p>

<table class="table">
    <thead>
        <tr>
            <th>Timestamp</th>
            <th>Component</th>
            <th>Severity</th>
            <th>Message</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var log in Logs)
        {
            <tr>
                <td>@log.Timestamp.ToString("yyyy-MM-dd HH:mm:ss.fff")</td>
                <td>@log.Component</td>
                <td>@log.Severity</td>
                <td>@log.Message</td>
            </tr>
        }
    </tbody>
</table>

@code {
    string AppId;
    string AppName;
    IEnumerable<Log> Logs = Enumerable.Empty<Log>();
    HubConnection SignalR;

    protected override async Task OnInitializedAsync()
    {
        var query = new Uri(NavigationManager.Uri).Query;
        if (QueryHelpers.ParseQuery(query).TryGetValue("AppId", out var appId))
            AppId = appId;

        SignalR = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/scarif"))
            .Build();

        await SignalR.StartAsync();
        AppName = await SignalR.InvokeAsync<string>("AppNameFromId", AppId);
        Logs = await SignalR.InvokeAsync<IEnumerable<Log>>("LogsForApp", AppId);

        StateHasChanged();
    }
}
